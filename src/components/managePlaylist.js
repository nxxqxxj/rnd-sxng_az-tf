import {
  CLIENT_ID,
  CLIENT_SECRET,
  TOKEN_EXPIRATION,
  GET_PLAYLIST_URL,
  GET_USER_INFO_URL,
  ADD_PUBLIC_PLAYLIST,
  ADD_ITEM_TO_PLAYLIST,
  URL_API_TOKEN,
  SONG_URI,
} from "./config.js";

var allPlaylists = [];

export function managePlaylist() {
  if (
    localStorage.getItem("user_token_requested") != null &&
    (Date.now() - parseInt(localStorage.getItem("user_token_requested"))) /
      1000 >
      TOKEN_EXPIRATION
  ) {
    refreshAuth();
  } else {
    if (localStorage.getItem("current_user") == null) getUserInfo();
    if (allPlaylists.length === 0) getPlaylists();
    else setSongInPlaylist();
  }
}

export default managePlaylist;

async function getUserInfo() {
  const user = await fetch(GET_USER_INFO_URL, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: "Bearer " + localStorage.getItem("user_access_token"),
    },
  });
  var userData = await user.json();
  const currentUser = userData.id;

  localStorage.setItem("current_user", currentUser);
}

async function refreshAuth() {
  //esto tengo que pasarlo a spotifyAuth
  var body = "grant_type=refresh_token";
  body += "&refresh_token=" + localStorage.getItem("user_refresh_token");

  const userToken = await fetch(URL_API_TOKEN, {
    method: "POST",
    headers: {
      "Content-Type": "application/x-www-form-urlencoded",
      Authorization: "Basic " + btoa(CLIENT_ID + ":" + CLIENT_SECRET),
    },
    body: body,
  });
  var datos = await userToken.json();

  localStorage.setItem("user_access_token", datos.access_token);
  var requested = Date.now().toString();
  localStorage.setItem("user_token_requested", requested);

  managePlaylist();
}

async function createPlaylist() {
  await fetch(
    ADD_PUBLIC_PLAYLIST + localStorage.getItem("current_user") + "/playlists",
    {
      method: "POST",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
        Authorization: "Bearer " + localStorage.getItem("user_access_token"),
      },
      body: JSON.stringify({
        name: "RND-SXNG",
        description:
          "Playlist generated by RND-SXNG - https://rnd-sxng.joaquin7ap.com",
        public: true,
      }),
    }
  );

  getPlaylists();
}

async function getPlaylists() {
  const playlist = await fetch(GET_PLAYLIST_URL, {
    headers: {
      "Content-Type": "application/json",
      Authorization: "Bearer " + localStorage.getItem("user_access_token"),
    },
  });
  var userPlaylists = await playlist.json();

  for (var i = 0; i < userPlaylists.items.length; i++) {
    if (
      (userPlaylists.items[i].owner.id =
        localStorage.getItem("current_user") &&
        userPlaylists.items[i].name === "RND-SXNG")
    ) {
      allPlaylists.push({
        name: userPlaylists.items[i].name,
        id: userPlaylists.items[i].id,
      });
      break;
    }

    /* GET ALL USER OWNED PLAYLIST
        if (userPlaylists.items[i].owner.id = localStorage.getItem("current_user")){
            allPlaylists.push({name: userPlaylists.items[i].name, id: userPlaylists.items[i].id})
        }
        */
  }
  if (allPlaylists.length === 0) createPlaylist();
  else setSongInPlaylist();
}

function setSongInPlaylist() {
  var url =
    ADD_ITEM_TO_PLAYLIST +
    allPlaylists[0].id +
    "/tracks?uris=" +
    SONG_URI +
    localStorage.getItem("current_id_song");
  fetch(url, {
    method: "POST",
    headers: {
      Accept: "application/json",
      "Content-Type": "application/json",
      Authorization: "Bearer " + localStorage.getItem("user_access_token"),
    },
  }).then((response) => {
    if (response.status === 201) window.confirm("Song added.");
    else window.alert("Something went wrong, try again later.");
  });
}
